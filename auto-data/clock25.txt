################################################################################
##
## Filename: 	clock.txt
## {{{
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2017-2021, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@$CLKFREQHZ=25000000
@PREFIX=clk
@CLOCK.NAME=clk
@TOP.DEFNS=
	wire		s_clk, s_reset;
@TOP.INSERT=
	assign	s_reset = 1'b0; // This design requires local, not global resets

`ifdef	VERILATOR
	assign	s_clk = i_clk;
`else
	reg	[1:0]	clkgen;
	reg		clk_25mhz;

	initial clkgen = 2'b00;
	always @(posedge i_clk)
		clkgen <= clkgen + 1'b1;

	initial	clk_25mhz = 1'b0;
	always @(posedge i_clk)
		clk_25mhz <= clkgen[1];

	SB_GB global_buffer(clk_25mhz, s_clk);
`endif

@REGDEFS.H.DEFNS=
#define	CLKFREQHZ	@$CLKFREQHZ
@BDEF.DEFN=
#define	CLKFREQHZ	@$CLKFREQHZ
@CLOCK.NAME=clk
@CLOCK.FREQUENCY= @$CLKFREQHZ
