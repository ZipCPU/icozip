################################################################################
##
## Filename: 	nodelay.txt
## {{{
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
##
## DEPRECATED WITH THE NEW AUTOFPGA
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2017-2021, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=hb_dwb
@$NADDR=(1<<@$(BUS.AWID))
@ERROR.WIRE=@$(PREFIX)_err
@SLAVE.TYPE=BUS
@SLAVE.BUS.NAME=hb
@$SLAVE.BUS.WIDTH=32
@MASTER.TYPE=ARBITER
@MASTER.BUS=wb
@BUS.NAME=wb
@BUS.WIDTH=32
@BUS.TYPE=wb
@BUS.CLOCK=clk
@CLOCK.NAME=clk
@$AWID=@$(MASTER.BUS.AWID)
@$NADDR=(1<<@$(MASTER.BUS.AWID))
@MAIN.DEFNS=
	// Bus arbiter's internal lines
	wire		@$(PREFIX)i_cyc, @$(PREFIX)i_stb, @$(PREFIX)i_we,
			@$(PREFIX)i_ack, @$(PREFIX)i_stall, @$(PREFIX)i_err;
	wire	[(@$(AWID)-1):0]	@$(PREFIX)i_addr;
	wire	[31:0]	@$(PREFIX)i_odata, @$(PREFIX)i_idata;
	wire	[3:0]	@$(PREFIX)i_sel;
@MAIN.INSERT=
	// If no ZipCPU, no delay arbiter is needed
	assign	@$(PREFIX)i_cyc   = @$(SLAVE.BUS.NAME)_cyc;
	assign	@$(PREFIX)i_stb   = @$(SLAVE.BUS.NAME)_stb;
	assign	@$(PREFIX)i_we    = @$(SLAVE.BUS.NAME)_we;
	assign	@$(PREFIX)i_addr  = @$(SLAVE.BUS.NAME)_addr[(@$(AWID)-1):0];
	assign	@$(PREFIX)i_odata = @$(SLAVE.BUS.NAME)_data;
	assign	@$(PREFIX)i_sel   = @$(SLAVE.BUS.NAME)_sel;
	assign	@$(PREFIX)_ack    = @$(PREFIX)i_ack;
	assign	@$(PREFIX)_stall  = @$(PREFIX)i_stall;
	assign	@$(PREFIX)_err    = @$(PREFIX)i_err;
	assign	@$(PREFIX)_data   = @$(PREFIX)i_idata;

	// If one of the two, the ZipCPU or the WBUBUS, isn't here, then we
	// don't need the bus delay, and we can go directly from the bus driver
	// to the bus itself
	//
	assign	@$(MASTER.BUS.NAME)_cyc    = @$(PREFIX)i_cyc;
	assign	@$(MASTER.BUS.NAME)_stb    = @$(PREFIX)i_stb;
	assign	@$(MASTER.BUS.NAME)_we     = @$(PREFIX)i_we;
	assign	@$(MASTER.BUS.NAME)_addr   = @$(PREFIX)i_addr;
	assign	@$(MASTER.BUS.NAME)_data   = @$(PREFIX)i_odata;
	assign	@$(MASTER.BUS.NAME)_sel    = @$(PREFIX)i_sel;
	assign	@$(PREFIX)i_ack   = @$(MASTER.BUS.NAME)_ack;
	assign	@$(PREFIX)i_stall = @$(MASTER.BUS.NAME)_stall;
	assign	@$(PREFIX)i_err   = @$(MASTER.BUS.NAME)_err;
	assign	@$(PREFIX)i_idata = @$(MASTER.BUS.NAME)_idata;

	assign	@$(PREFIX)_data = @$(PREFIX)i_idata;
